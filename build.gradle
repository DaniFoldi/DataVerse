plugins {
    id 'java'
    id 'net.kyori.blossom' version '1.3.0'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group 'com.danifoldi'
version '0.0.2-BETA'

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

repositories {
    mavenCentral()
    google()
    maven { url 'https://repo.danifoldi.com/repository/maven-releases/' }
    maven { url 'https://papermc.io/repo/repository/maven-public/' }
    maven { url 'https://nexus.velocitypowered.com/repository/maven-public/' }
}

dependencies {
    // platforms
    compileOnly 'io.github.waterfallmc:waterfall-api:1.17-R0.1-SNAPSHOT'
    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
    compileOnly 'com.velocitypowered:velocity-api:3.0.1'
    annotationProcessor 'com.velocitypowered:velocity-api:3.0.1'

    // db connectors
    implementation 'com.danifoldi:DML:0.0.3'
    implementation 'com.zaxxer:HikariCP:5.0.0'

    // inject system
    implementation 'javax.inject:javax.inject:1'
    implementation 'com.google.dagger:dagger:2.40.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.40.1'

    // intellij
    compileOnly 'org.jetbrains:annotations:23.0.0'
}

processResources {
    from('src/main/resources') {
        expand(version: project.version)
        duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }
}

blossom {
    replaceTokenIn('src/main/java/com/danifoldi/dataverse/platform/velocity/DataVersePlugin.java')
    replaceToken '@version@', project.version
}

shadowJar {
    minimize()
    // todo relocates

    getArchiveFileName().set("${project.name}-${project.version}.jar")
}